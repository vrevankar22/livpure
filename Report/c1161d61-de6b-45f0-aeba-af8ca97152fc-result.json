{"name": "test_verify_TitaniumPlanPrice", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <testcases.test_smartWaterSubscription.TestSmartWaterSubscription object at 0x00000202FBB8CA60>\n\n    def test_verify_TitaniumPlanPrice(self):\n>       self.verify_TitaniumPlanPrice(readData(excel,'SignUp',15,1),readData(excel,'SignUp',15,3),\n                                    readData(excel,'SignUp',3,9),readData(excel,'SignUp',4,9),readData(excel,'SignUp',5,9),\n                                    readData(excel,'SignUp',3,13),readData(excel,'SignUp',4,13),readData(excel,'SignUp',5,13))\n\ntestcases\\test_smartWaterSubscription.py:100: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\smartWaterSubscriptionPage.py:708: in verify_TitaniumPlanPrice\n    self.login(email, password)\nPages\\smartWaterSubscriptionPage.py:15: in login\n    self.click(SignUpPage.loginBtn)\nutilities\\BaseClass.py:21: in click\n    WebDriverWait(self.driver,10).until(EC.visibility_of_element_located(by_locator)).click()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"6d62ca74886f5ffb25b92a44c1f4c02d\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x00000202FBBB0F40>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "attachments": [{"name": "log", "source": "d371de9e-9beb-4df6-aad0-5d6b7fe9505e-attachment.txt", "type": "text/plain"}], "start": 1625117658848, "stop": 1625117669535, "uuid": "e407ee68-bef7-4169-884a-ef8fc6f31728", "historyId": "7c565f306b57a6dc74beb17cb6331c64", "testCaseId": "5377c2e687c2cc2585739d894aee5fd4", "fullName": "testcases.test_smartWaterSubscription.TestSmartWaterSubscription#test_verify_TitaniumPlanPrice", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_smartWaterSubscription"}, {"name": "subSuite", "value": "TestSmartWaterSubscription"}, {"name": "host", "value": "RPS-SBC-L-0008"}, {"name": "thread", "value": "13432-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_smartWaterSubscription"}]}