{"name": "test_verify_LeaderBoard", "status": "failed", "statusDetails": {"message": "AssertionError: Leaderboard not displayed for the current month", "trace": "self = <testcases.test_smartWaterSubscription.TestSmartWaterSubscription object at 0x00000202FBCAB4C0>\n\n    def test_verify_LeaderBoard(self):\n>       self.verify_LeaderBoard(readData(excel,'SignUp',15,1),readData(excel,'SignUp',15,3))\n\ntestcases\\test_smartWaterSubscription.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcases.test_smartWaterSubscription.TestSmartWaterSubscription object at 0x00000202FBCAB4C0>, email = 'testplandetails@gmail.com', password = 'Test@007'\n\n    def verify_LeaderBoard(self,email,password):\n        log = self.getLogger()\n        self.smartWatersub()\n        self.login(email,password)\n        time.sleep(5)\n        self.click(SignUpPage.referEarnBtn)\n        time.sleep(5)\n        self.click(SignUpPage.leaderBoard)\n        time.sleep(5)\n        assert self.driver.find_element(By.XPATH,\"//div[@class='LeadBdgradintBg']\").is_displayed(),'LeaderBoard not displayed'\n        log.info('LeaderBoard displayed')\n        time.sleep(5)\n        cm = date.today()\n        cmonth = cm.strftime(\"%b\")\n        monthtxt = self.driver.find_element(By.XPATH,\"//div[@id='Pmonths']\").text\n>       assert cmonth.casefold() == monthtxt.casefold(), 'Leaderboard not displayed for the current month'\nE       AssertionError: Leaderboard not displayed for the current month\n\nPages\\smartWaterSubscriptionPage.py:536: AssertionError"}, "attachments": [{"name": "log", "source": "96e7c111-2bb6-40e5-ab26-a846a8dcfefd-attachment.txt", "type": "text/plain"}], "start": 1625117533375, "stop": 1625117558505, "uuid": "a8e0ee81-b857-4701-ae4e-3d2527d59e38", "historyId": "12c691400182061f96ab3eb76208a7c1", "testCaseId": "aa87ba145a0deac9f7cc9362b10ef881", "fullName": "testcases.test_smartWaterSubscription.TestSmartWaterSubscription#test_verify_LeaderBoard", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_smartWaterSubscription"}, {"name": "subSuite", "value": "TestSmartWaterSubscription"}, {"name": "host", "value": "RPS-SBC-L-0008"}, {"name": "thread", "value": "13432-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_smartWaterSubscription"}]}