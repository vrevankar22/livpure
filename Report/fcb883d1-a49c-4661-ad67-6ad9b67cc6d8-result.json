{"name": "test_verify_CustomerDashboard", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <testcases.test_smartWaterSubscription.TestSmartWaterSubscription object at 0x0000016AC8434A60>\n\n    def test_verify_CustomerDashboard(self):\n>       self.verify_CustomerDashboard(readData(excel,'SignUp',15,1),readData(excel,'SignUp',15,3),readData(excel,'SignUp',15,4),\n                                      readData(excel,'SignUp',15,2),readData(excel,'SignUp',15,5),readData(excel,'SignUp',15,6),\n                                      readData(excel,'SignUp',15,7),readData(excel,'SignUp',15,8),readData(excel,'SignUp',21,1),readData(excel,'SignUp',21,2))\n\ntestcases\\test_smartWaterSubscription.py:63: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\smartWaterSubscriptionPage.py:438: in verify_CustomerDashboard\n    self.click(SignUpPage.fbLogin)\nutilities\\BaseClass.py:21: in click\n    WebDriverWait(self.driver,10).until(EC.visibility_of_element_located(by_locator)).click()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a812207f8888e24a74906a51a6b080e3\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x0000016AC83A31C0>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "attachments": [{"name": "log", "source": "d0a80409-6c8c-441b-b565-3a4b600426e5-attachment.txt", "type": "text/plain"}], "start": 1625055177468, "stop": 1625055207824, "uuid": "2f97cc37-f18d-461d-ac26-4e957a9d6b82", "historyId": "f234492efba457fac55a86fd5050e73a", "testCaseId": "665069fb4a0508d244c7a06c7771e516", "fullName": "testcases.test_smartWaterSubscription.TestSmartWaterSubscription#test_verify_CustomerDashboard", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_smartWaterSubscription"}, {"name": "subSuite", "value": "TestSmartWaterSubscription"}, {"name": "host", "value": "RPS-SBC-L-0008"}, {"name": "thread", "value": "29744-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_smartWaterSubscription"}]}